name: CI/CD Pipeline

on:
  push:
    # frontend 브랜치 push 시에도 워크플로우가 트리거되도록 추가
    branches: [ main, backend, frontend ]
  pull_request:
    # 필요하다면 pull_request 트리거에도 frontend 추가 가능
    branches: [ main, backend ]

jobs:
  frontend:
    runs-on: ubuntu-latest
    # frontend 브랜치 push 시 frontend 잡이 실행되도록 조건 변경
    if: github.ref == 'refs/heads/frontend'

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        cd frontend
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 참고: 현재 frontend 잡은 frontend 브랜치에서 빌드 후 S3에 배포합니다.
    # 만약 main 브랜치에서만 배포하고 frontend 브랜치에서는 빌드/테스트만 하려면
    # 구조를 다르게 설계해야 할 수 있습니다. (예: main 브랜치용 별도 deploy 잡)
    - name: Deploy static assets to AWS S3 (Example - Adjust path/strategy as needed)
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-2
      run: |
        # Example: Sync only static files. Adjust if deploying the whole app.
        aws s3 sync frontend/static s3://your-s3-bucket-name/static --delete

  backend:
    runs-on: ubuntu-latest
    # backend 잡은 backend 브랜치 push 시 실행 (기존과 동일)
    if: github.ref == 'refs/heads/backend'

    steps:
    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt

    - name: Create deployment package
      run: |
        cd backend
        zip -r ../backend.zip .

    - name: Deploy to AWS Lambda
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-2
      run: |
        aws lambda update-function-code --function-name phonitale-evaluation-lambda --zip-file fileb://backend.zip --region us-east-2